# nginx.conf
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json application/xml+rss;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=web_limit:10m rate=30r/s;

    # Upstream definitions
    upstream api {
        server api:3001;
    }

    upstream bot {
        server bot:3002;
    }

    upstream web {
        server web:80;
    }

    server {
        listen 80;
        server_name 193.104.57.79;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # API routes â€” strip /api/ prefix
        location /api/ {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://api/;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Bot health endpoint (for monitoring)
        location /bot/health {
            proxy_pass http://bot/health;
            access_log off;
        }

        # Static assets with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://web;
            proxy_cache_valid 200 1d;
            add_header Cache-Control "public, immutable";
        }

        # All other routes go to React SPA
        location / {
            limit_req zone=web_limit burst=50 nodelay;
            proxy_pass http://web;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Ensure SPA routing works
            proxy_intercept_errors on;
            error_page 404 = @fallback;
        }

        # Fallback for SPA routing
        location @fallback {
            proxy_pass http://web;
        }
    }
}